[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "django-gesha"
authors = [
    {name = "elyas", email = "elyas@ely.as"},
]
description = "JavaScript utilities for Django projects."
requires-python = ">=3.8"
keywords = ["django", "javascript"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: JavaScript",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
    "Framework :: Django",
    "Framework :: Django :: 2.2",
    "Framework :: Django :: 3.0",
    "Framework :: Django :: 3.1",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
]
dependencies = [
    "Django",
]
dynamic = ["version", "readme"]

[project.urls]
homepage = "https://django-gesha.readthedocs.io/en/latest/"
repository = "https://github.com/ely-as/django-gesha"
changelog = "https://github.com/ely-as/django-gesha/blob/main/CHANGELOG.md"

[tool.setuptools.dynamic]
version = {attr = "gesha.__version__"}
readme = {file = ["README.md"], content-type = "text/markdown"}

[tool.setuptools.packages.find]
where = ["."]
include = ["gesha"]

[project.optional-dependencies]
doc = [
    "mkdocs",
    "mkdocs-material",
]
test = [
    "black",
    "beautifulsoup4",
    "lxml",
    "mypy",
    "pytest>=7",      # >=7 required for pythonpath option
    "pytest-cov",
    "pytest-django",
    "ruff",
    "types-beautifulsoup4",
    "uvicorn",
]

[tool.coverage.run]
omit = ["test_project/*"]

[tool.mypy]
warn_unused_configs = true
files = [
    "gesha/**/*.py",
    "tests/**/*.py",
]

[[tool.mypy.overrides]]
module = "django.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "fake.settings"
pythonpath = [
  ".",
  "test_project",
]

[tool.ruff]
select = [
    "F",     # Pyflakes
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "I",     # isort
    "B",     # flake8-bugbear
    "C",     # flake8-comprehensions and mccabe
]
fixable = [
    "I",     # isort
]
ignore = [
    "E501",  # line too long
]

[tool.ruff.mccabe]
max-complexity = 5
